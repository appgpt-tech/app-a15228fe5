//Source code generated by AppGPT (www.appgpt.tech)
import { Admin, Resource, CustomRoutes } from 'react-admin';
import { customDataProvider } from './dataProvider';
import fakeDataProvider from 'ra-data-fakerest';
import { Dashboard } from './dashboard';
import { authProvider, apInitialize } from './authProvider';
import { i18nProvider } from './i18nProvider';
import LoginPage, { Login } from './Login';
import data from './data';
import { PlayersList, PlayersCreate, PlayersEdit } from './resources/Players';
import { WeaponsList, WeaponsCreate, WeaponsEdit } from './resources/Weapons';
import { TeamsList, TeamsCreate, TeamsEdit } from './resources/Teams';
import { MatchesList, MatchesCreate, MatchesEdit } from './resources/Matches';
import {
  LeaderboardsList,
  LeaderboardsCreate,
  LeaderboardsEdit,
} from './resources/Leaderboards';
import { FriendsList, FriendsCreate, FriendsEdit } from './resources/Friends';
import { ChatList, ChatCreate, ChatEdit } from './resources/Chat';
import PlayersIcon from '@mui/icons-material/Person';
import WeaponsIcon from '@mui/icons-material/SportsEsports';
import TeamsIcon from '@mui/icons-material/Group';
import MatchesIcon from '@mui/icons-material/Event';
import LeaderboardsIcon from '@mui/icons-material/FormatListNumbered';
import FriendsIcon from '@mui/icons-material/PersonAdd';
import ChatIcon from '@mui/icons-material/Chat';
// SUPERTOKENS
import React from 'react';
import SuperTokens, {
  SuperTokensWrapper,
  getSuperTokensRoutesForReactRouterDom,
} from 'supertokens-auth-react';
import ThirdPartyPasswordless from 'supertokens-auth-react/recipe/thirdpartypasswordless';
import Session from 'supertokens-auth-react/recipe/session';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import * as reactRouterDom from 'react-router-dom';
let sessionFn = Session.init();
SuperTokens.init({
  appInfo: {
    appName: import.meta.env.VITE_SUPERTOKENS_APPNAME,
    apiDomain: import.meta.env.VITE_BACKEND_DOMAIN,
    websiteDomain: import.meta.env.VITE_SUPERTOKENS_WEBSITEDOMAIN,
    apiBasePath: import.meta.env.VITE_BACKEND_APIPATH + '/auth',
    websiteBasePath: import.meta.env.VITE_SUPERTOKENS_WEBSITEBASEPATH,
  },
  recipeList: [
    ThirdPartyPasswordless.init({
      contactMethod: 'EMAIL',
      signInUpFeature: {
        providers: [
          ThirdPartyPasswordless.Github.init(),
          //ThirdPartyPasswordless.Google.init(),
          //ThirdPartyPasswordless.Facebook.init(),
          //ThirdPartyPasswordless.Apple.init(),
        ],
      },
    }),
    sessionFn,
  ],
});
apInitialize(Session);
// END SUPERTOKENS
let dataProvider: any;
if (import.meta.env.VITE_USE_BACKEND_DATA === 'true') {
  dataProvider = customDataProvider(
    import.meta.env.VITE_BACKEND_DOMAIN +
      import.meta.env.VITE_BACKEND_APIPATH +
      '/proxy',
  );
} else {
  dataProvider = fakeDataProvider(data.defaultData);
}

const App = () => (
  <SuperTokensWrapper>
    <BrowserRouter basename="/a15228fe5">
      <Admin
        authProvider={
          import.meta.env.VITE_ENVIRONMENT != 'DEV' ? authProvider : undefined
        }
        requireAuth
        loginPage={LoginPage}
        dataProvider={dataProvider}
        i18nProvider={i18nProvider}
        dashboard={Dashboard}
      >
        <Resource
          name="Players"
          options={{ label: 'Players' }}
          list={PlayersList}
          create={PlayersCreate}
          edit={PlayersEdit}
          recordRepresentation="username"
          icon={PlayersIcon}
        />
        <Resource
          name="Weapons"
          options={{ label: 'Weapons' }}
          list={WeaponsList}
          create={WeaponsCreate}
          edit={WeaponsEdit}
          recordRepresentation="gunName"
          icon={WeaponsIcon}
        />
        <Resource
          name="Teams"
          options={{ label: 'Teams' }}
          list={TeamsList}
          create={TeamsCreate}
          edit={TeamsEdit}
          recordRepresentation="teamName"
          icon={TeamsIcon}
        />
        <Resource
          name="Matches"
          options={{ label: 'Matches' }}
          list={MatchesList}
          create={MatchesCreate}
          edit={MatchesEdit}
          recordRepresentation="matchID"
          icon={MatchesIcon}
        />
        <Resource
          name="Leaderboards"
          options={{ label: 'Leaderboards' }}
          list={LeaderboardsList}
          create={LeaderboardsCreate}
          edit={LeaderboardsEdit}
          recordRepresentation="playerName"
          icon={LeaderboardsIcon}
        />
        <Resource
          name="Friends"
          options={{ label: 'Friends' }}
          list={FriendsList}
          create={FriendsCreate}
          edit={FriendsEdit}
          recordRepresentation="playerUsername"
          icon={FriendsIcon}
        />
        <Resource
          name="Chat"
          options={{ label: 'Chat' }}
          list={ChatList}
          create={ChatCreate}
          edit={ChatEdit}
          recordRepresentation="chatID"
          icon={ChatIcon}
        />
        <CustomRoutes noLayout>
          {/*This renders the login UI on the /auth route*/}
          {getSuperTokensRoutesForReactRouterDom(reactRouterDom)}
          {/*Your app routes*/}
        </CustomRoutes>
      </Admin>
    </BrowserRouter>
  </SuperTokensWrapper>
);

export default App;
